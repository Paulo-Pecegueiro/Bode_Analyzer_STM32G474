/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#ifndef TOUCHGFX_APPLICATIONFONTPROVIDER_HPP
#define TOUCHGFX_APPLICATIONFONTPROVIDER_HPP

#include <touchgfx/FontManager.hpp>

namespace touchgfx
{
class FlashDataReader;
}

struct Typography
{
    static const touchgfx::FontId UX_LIGHT = 0;
    static const touchgfx::FontId UX_BIG = 1;
    static const touchgfx::FontId UX_MEDIUM = 2;
    static const touchgfx::FontId UX_SMALL = 3;
    static const touchgfx::FontId UX_MED = 4;
    static const touchgfx::FontId UX_BIGBIG = 5;
    static const touchgfx::FontId UX_GRAPHLABEL = 6;
};

struct TypographyFontIndex
{
    static const touchgfx::FontId UX_LIGHT = 0;      // OpenSans_Light_20_4bpp
    static const touchgfx::FontId UX_BIG = 1;        // OpenSans_Bold_39_4bpp
    static const touchgfx::FontId UX_MEDIUM = 2;     // OpenSans_Regular_30_4bpp
    static const touchgfx::FontId UX_SMALL = 3;      // OpenSans_Light_19_4bpp
    static const touchgfx::FontId UX_MED = 4;        // OpenSans_Light_21_4bpp
    static const touchgfx::FontId UX_BIGBIG = 5;     // OpenSans_Bold_55_4bpp
    static const touchgfx::FontId UX_GRAPHLABEL = 6; // OpenSans_Bold_11_4bpp
    static const uint16_t NUMBER_OF_FONTS = 7;
};

class ApplicationFontProvider : public touchgfx::FontProvider
{
public:
    virtual touchgfx::Font* getFont(touchgfx::FontId typography);

    static void setFlashReader(touchgfx::FlashDataReader* flashReader)
    {
        fontFlashReader = flashReader;
    }

    static touchgfx::FlashDataReader* getFlashReader()
    {
        return fontFlashReader;
    }

private:
    static touchgfx::FlashDataReader* fontFlashReader;
};

#endif // TOUCHGFX_APPLICATIONFONTPROVIDER_HPP
