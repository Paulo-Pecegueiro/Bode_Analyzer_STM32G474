// 4.22.1 0x46ca1e39
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_button1[]; // BITMAP_BUTTON1_ID = 0, Size: 240x50 pixels
extern const unsigned char image_button2[]; // BITMAP_BUTTON2_ID = 1, Size: 240x50 pixels
extern const unsigned char image_button3[]; // BITMAP_BUTTON3_ID = 2, Size: 240x50 pixels
extern const unsigned char image_button4[]; // BITMAP_BUTTON4_ID = 3, Size: 42x42 pixels
extern const unsigned char image_button6[]; // BITMAP_BUTTON6_ID = 4, Size: 42x42 pixels
extern const unsigned char image_dragbtnoff[]; // BITMAP_DRAGBTNOFF_ID = 5, Size: 97x37 pixels
extern const unsigned char image_dragbtnon[]; // BITMAP_DRAGBTNON_ID = 6, Size: 97x37 pixels
extern const unsigned char image_graphic[]; // BITMAP_GRAPHIC_ID = 7, Size: 740x370 pixels
extern const unsigned char image_graphics_screen[]; // BITMAP_GRAPHICS_SCREEN_ID = 8, Size: 800x480 pixels
extern const unsigned char image_icon_theme_images_alert_warning_72_68_59585c_svg[]; // BITMAP_ICON_THEME_IMAGES_ALERT_WARNING_72_68_59585C_SVG_ID = 9, Size: 72x68 pixels
extern const unsigned char image_ifsp_logo[]; // BITMAP_IFSP_LOGO_ID = 10, Size: 200x200 pixels
extern const unsigned char image_ifsp_logo_20h[]; // BITMAP_IFSP_LOGO_20H_ID = 11, Size: 220x270 pixels
extern const unsigned char image_miyoshi_logo[]; // BITMAP_MIYOSHI_LOGO_ID = 12, Size: 120x120 pixels
extern const unsigned char image_progressbar[]; // BITMAP_PROGRESSBAR_ID = 13, Size: 650x20 pixels
extern const unsigned char image_progressbar2[]; // BITMAP_PROGRESSBAR2_ID = 14, Size: 646x16 pixels
extern const unsigned char image_st_logo[]; // BITMAP_ST_LOGO_ID = 15, Size: 120x120 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_button1, 0, 240, 50, 1, 0, 238, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 50, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_button2, 0, 240, 50, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_button3, 0, 240, 50, 1, 0, 238, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 50, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_button4, 0, 42, 42, 2, 1, 38, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 40, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_button6, 0, 42, 42, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dragbtnoff, 0, 97, 37, 10, 10, 17, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 17, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dragbtnon, 0, 97, 37, 12, 2, 72, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 33, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_graphic, 0, 740, 370, 0, 0, 740, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 370, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_graphics_screen, 0, 800, 480, 0, 0, 800, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 480, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_icon_theme_images_alert_warning_72_68_59585c_svg, 0, 72, 68, 9, 56, 55, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_ifsp_logo, 0, 200, 200, 30, 29, 140, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 142, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_ifsp_logo_20h, 0, 220, 270, 0, 0, 220, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 270, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_miyoshi_logo, 0, 120, 120, 18, 18, 84, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 84, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_progressbar, 0, 650, 20, 8, 0, 634, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 20, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_progressbar2, 0, 646, 16, 6, 1, 634, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 14, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_st_logo, 0, 120, 120, 18, 18, 84, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 84, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
