/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#include <stdarg.h>
#include <touchgfx/TextProvider.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/TypedText.hpp>
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
    va_end(pArg);
    return width;
}

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
    va_end(pArg);
    return width;
}

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
    {
        substituteGlyphs();
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
}

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
    va_list pArg;
    va_start(pArg, format);
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
    va_end(pArg);
}

// Default TypedTextDatabase
extern const touchgfx::TypedText::TypedTextData* const typedTextDatabaseArray[];

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::Unicode::UnicodeChar texts_all_languages[] TEXT_LOCATION_FLASH_ATTRIBUTE = {
    0x4f, 0x20, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x20, 0x64, 0x65, 0x20, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0xe7, 0xe3, 0x6f, 0x20, 0x61, 0x66, 0x65, 0x74, 0x61, 0x72, 0xe1, 0x20, 0x64, 0x69, 0x72, 0x65, 0x74, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0xa, 0x61, 0x20, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x64, 0x65, 0x20, 0x64, 0x6f, 0x73, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x61, 0x64, 0x6f, 0x73, 0x20, 0x64, 0x61, 0x73, 0x20, 0x61, 0x71, 0x75, 0x69, 0x73, 0x69, 0xe7, 0xf5, 0x65, 0x73, 0x2e, 0xa, 0x45, 0x6d, 0x20, 0x63, 0x61, 0x73, 0x6f, 0x20, 0x64, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x61, 0x73, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x65, 0x20, 0x61, 0x20, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0xe7, 0xe3, 0x6f, 0xa, 0x70, 0x61, 0x64, 0x72, 0xe3, 0x6f, 0x20, 0x6e, 0x6f, 0x20, 0x6d, 0x65, 0x6e, 0x75, 0x20, 0x64, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0xe7, 0xf5, 0x65, 0x73, 0x2e, 0xa, 0x50, 0x61, 0x72, 0x61, 0x20, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x65, 0x72, 0x20, 0x63, 0x6f, 0x6d, 0x20, 0x61, 0x20, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0xe7, 0xe3, 0x6f, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x20, 0x6f, 0xa, 0x73, 0x69, 0x6e, 0x61, 0x6c, 0x20, 0x64, 0x61, 0x20, 0x73, 0x61, 0xed, 0x64, 0x61, 0x20, 0x64, 0x69, 0x72, 0x65, 0x74, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x20, 0x6e, 0x61, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x64, 0x61, 0x2e, 0x0, // @0 "O processo de calibra??o afetar? diretamente\na qualidade dos resultados das aquisi??es.\nEm caso de problemas, restaure a calibra??o\npadr?o no menu de configura??es.\nPara proceder com a calibra??o, conecte o\nsinal da sa?da diretamente na entrada."
    0x4f, 0x20, 0x42, 0x6f, 0x64, 0x65, 0x20, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x20, 0x66, 0x6f, 0x69, 0x20, 0x64, 0x65, 0x73, 0x65, 0x6e, 0x76, 0x6f, 0x6c, 0x76, 0x69, 0x64, 0x6f, 0x20, 0x63, 0x6f, 0x6d, 0x6f, 0x20, 0x75, 0x6d, 0x20, 0xa, 0x54, 0x72, 0x61, 0x62, 0x61, 0x6c, 0x68, 0x6f, 0x20, 0x64, 0x65, 0x20, 0x43, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0xe3, 0x6f, 0x20, 0x70, 0x61, 0x72, 0x61, 0x20, 0x6f, 0x20, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x20, 0x64, 0x65, 0x20, 0xa, 0x45, 0x6e, 0x67, 0x65, 0x6e, 0x68, 0x61, 0x72, 0x69, 0x61, 0x20, 0x64, 0x65, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x65, 0x20, 0x65, 0x20, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0xe7, 0xe3, 0x6f, 0x20, 0x65, 0x6d, 0x20, 0x32, 0x30, 0x32, 0x33, 0xa, 0xa, 0x44, 0x61, 0x6e, 0x69, 0x65, 0x6c, 0x20, 0x42, 0x6f, 0x74, 0x65, 0x6c, 0x68, 0x6f, 0x20, 0x42, 0x69, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x20, 0x2d, 0x20, 0x53, 0x50, 0x33, 0x30, 0x32, 0x33, 0x36, 0x37, 0x32, 0xa, 0x50, 0x61, 0x75, 0x6c, 0x6f, 0x20, 0x4d, 0x69, 0x79, 0x6f, 0x73, 0x68, 0x69, 0x20, 0x50, 0x65, 0x63, 0x65, 0x67, 0x75, 0x65, 0x69, 0x72, 0x6f, 0x20, 0x2d, 0x20, 0x53, 0x50, 0x33, 0x30, 0x33, 0x30, 0x38, 0x34, 0x39, 0xa, 0xa, 0x0, // @246 "O Bode Analyzer foi desenvolvido como um \nTrabalho de Conclus?o para o curso de \nEngenharia de Controle e Automa??o em 2023\n\nDaniel Botelho Bicalho - SP3023672\nPaulo Miyoshi Pecegueiro - SP3030849\n\n"
    0x44, 0x61, 0x6e, 0x69, 0x65, 0x6c, 0x20, 0x42, 0x6f, 0x74, 0x65, 0x6c, 0x68, 0x6f, 0x20, 0x42, 0x69, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x20, 0x7c, 0x20, 0x50, 0x61, 0x75, 0x6c, 0x6f, 0x20, 0x4d, 0x69, 0x79, 0x6f, 0x73, 0x68, 0x69, 0x20, 0x50, 0x65, 0x63, 0x65, 0x67, 0x75, 0x65, 0x69, 0x72, 0x6f, 0x0, // @445 "Daniel Botelho Bicalho | Paulo Miyoshi Pecegueiro"
    0x41, 0x71, 0x75, 0x69, 0x73, 0x69, 0xe7, 0xe3, 0x6f, 0x20, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x64, 0x61, 0x2c, 0x20, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x61, 0x64, 0x6f, 0x73, 0x2e, 0x2e, 0x2e, 0x0, // @495 "Aquisi??o finalizada, preparando resultados..."
    0x41, 0x67, 0x75, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x64, 0x6f, 0x20, 0x70, 0x65, 0x72, 0xed, 0x6f, 0x64, 0x6f, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0xf3, 0x72, 0x69, 0x6f, 0x20, 0x64, 0x6f, 0x73, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x72, 0x6f, 0x73, 0x2e, 0x2e, 0x2e, 0x0, // @542 "Aguardando per?odo transit?rio dos filtros..."
    0x53, 0x69, 0x73, 0x74, 0x65, 0x6d, 0x61, 0x20, 0x64, 0x65, 0x20, 0x61, 0x72, 0x71, 0x75, 0x69, 0x76, 0x6f, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x61, 0x64, 0x6f, 0xa, 0x63, 0x6f, 0x6d, 0x20, 0x73, 0x75, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x21, 0x0, // @588 "Sistema de arquivos formatado\ncom sucesso!"
    0x4e, 0x6f, 0x76, 0x61, 0x20, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0xe7, 0xe3, 0x6f, 0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x64, 0x61, 0x20, 0xa, 0x63, 0x6f, 0x6d, 0x20, 0x73, 0x75, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x21, 0x0, // @631 "Nova calibra??o registrada \ncom sucesso!"
    0x54, 0x65, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x6f, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x2e, 0x2e, 0x2e, 0x20, 0x44, 0xe9, 0x63, 0x61, 0x64, 0x61, 0x20, 0x2, 0x2f, 0x34, 0x0, // @672 "Testando dispositivo... D?cada <>/4"
    0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x72, 0x20, 0x76, 0x61, 0x6c, 0x6f, 0x72, 0x65, 0x73, 0x20, 0x70, 0x61, 0x64, 0x72, 0xf5, 0x65, 0x73, 0x20, 0x64, 0x65, 0x20, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0xe7, 0xe3, 0x6f, 0x0, // @707 "Restaurar valores padr?es de calibra??o"
    0x45, 0x78, 0x69, 0x62, 0x69, 0x72, 0x20, 0x6f, 0x20, 0x67, 0x72, 0xe1, 0x66, 0x69, 0x63, 0x6f, 0x20, 0x64, 0x61, 0x20, 0xfa, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x61, 0x71, 0x75, 0x69, 0x73, 0x69, 0xe7, 0xe3, 0x6f, 0x0, // @747 "Exibir o gr?fico da ?ltima aquisi??o"
    0x43, 0x6f, 0x6d, 0x70, 0x65, 0x6e, 0x73, 0x61, 0x72, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x72, 0x6f, 0x73, 0x20, 0x65, 0x20, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x6f, 0x72, 0x65, 0x73, 0x3a, 0x0, // @784 "Compensar filtros e amplificadores:"
    0x41, 0x67, 0x75, 0x61, 0x72, 0x64, 0x65, 0x21, 0xa, 0xa, 0x52, 0x65, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x6e, 0x64, 0x6f, 0x20, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0xe7, 0xe3, 0x6f, 0x2e, 0x2e, 0x2e, 0x0, // @820 "Aguarde!\n\nRealizando calibra??o..."
    0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0xe7, 0xe3, 0x6f, 0x20, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x64, 0x61, 0x20, 0x63, 0x6f, 0x6d, 0xa, 0x73, 0x75, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x21, 0x0, // @855 "Calibra??o restaurada com\nsucesso!"
    0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x72, 0x20, 0x64, 0x61, 0x64, 0x6f, 0x73, 0x20, 0x64, 0x61, 0x20, 0xfa, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x61, 0x71, 0x75, 0x69, 0x73, 0x69, 0xe7, 0xe3, 0x6f, 0x0, // @890 "Exportar dados da ?ltima aquisi??o"
    0x52, 0x65, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x72, 0x20, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0xe7, 0xe3, 0x6f, 0x20, 0x64, 0x6f, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x0, // @925 "Realizar calibra??o do dispositivo"
    0x44, 0x61, 0x64, 0x6f, 0x73, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x64, 0x6f, 0x73, 0x20, 0x63, 0x6f, 0x6d, 0x20, 0x73, 0x75, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x21, 0x0, // @960 "Dados exportados com sucesso!"
    0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0xe7, 0xf5, 0x65, 0x73, 0x20, 0x64, 0x6f, 0x20, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x0, // @990 "Configura??es do Dispositivo"
    0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0xe7, 0xf5, 0x65, 0x73, 0x20, 0x64, 0x65, 0x20, 0x41, 0x71, 0x75, 0x69, 0x73, 0x69, 0xe7, 0xe3, 0x6f, 0x0, // @1019 "Configura??es de Aquisi??o"
    0x46, 0x72, 0x65, 0x71, 0x75, 0xea, 0x6e, 0x63, 0x69, 0x61, 0x73, 0x20, 0x61, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x64, 0x61, 0x73, 0x3a, 0x0, // @1046 "Frequ?ncias analizadas:"
    0x41, 0x74, 0x69, 0x76, 0x61, 0x6e, 0x64, 0x6f, 0x20, 0x6f, 0x73, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x72, 0x6f, 0x73, 0x2e, 0x2e, 0x2e, 0x0, // @1070 "Ativando os filtros..."
    0x45, 0x78, 0x69, 0x62, 0x69, 0x72, 0x20, 0xda, 0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x20, 0x47, 0x72, 0xe1, 0x66, 0x69, 0x63, 0x6f, 0x0, // @1093 "Exibir ?ltimo Gr?fico"
    0x44, 0x65, 0x73, 0x63, 0x61, 0x72, 0x74, 0x61, 0x72, 0x20, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0xe7, 0xe3, 0x6f, 0x0, // @1115 "Descartar Calibra??o"
    0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x72, 0x20, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0xe7, 0xe3, 0x6f, 0x0, // @1136 "Restaurar Calibra??o"
    0x54, 0x65, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x6f, 0x20, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x0, // @1157 "Testando Dispositivo"
    0x41, 0x6d, 0x70, 0x6c, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20, 0x64, 0x65, 0x20, 0x73, 0x61, 0xed, 0x64, 0x61, 0x3a, 0x0, // @1178 "Amplitude de sa?da:"
    0x49, 0x6e, 0x69, 0x63, 0x69, 0x61, 0x72, 0x20, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0xe7, 0xe3, 0x6f, 0x0, // @1198 "Iniciar Calibra??o"
    0x41, 0x62, 0x6f, 0x72, 0x74, 0x61, 0x72, 0x20, 0x41, 0x71, 0x75, 0x69, 0x73, 0x69, 0xe7, 0xe3, 0x6f, 0x0, // @1217 "Abortar Aquisi??o"
    0x41, 0x6e, 0xe1, 0x6c, 0x69, 0x73, 0x65, 0x20, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x61, 0x64, 0x61, 0x21, 0x0, // @1235 "An?lise abortada!"
    0x47, 0x65, 0x72, 0x61, 0x64, 0x6f, 0x72, 0x20, 0x64, 0x65, 0x20, 0x53, 0x69, 0x6e, 0x61, 0x69, 0x73, 0x0, // @1253 "Gerador de Sinais"
    0x49, 0x6e, 0x69, 0x63, 0x69, 0x61, 0x72, 0x20, 0x41, 0x71, 0x75, 0x69, 0x73, 0x69, 0xe7, 0xe3, 0x6f, 0x0, // @1271 "Iniciar Aquisi??o"
    0x53, 0x61, 0x6c, 0x76, 0x61, 0x72, 0x20, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0xe7, 0xe3, 0x6f, 0x0, // @1289 "Salvar Calibra??o"
    0x56, 0x6f, 0x6c, 0x74, 0x61, 0x72, 0x20, 0x61, 0x6f, 0x20, 0x69, 0x6e, 0xed, 0x63, 0x69, 0x6f, 0x0, // @1307 "Voltar ao in?cio"
    0x42, 0x6f, 0x64, 0x65, 0x20, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x20, 0x0, // @1324 "Bode Analyzer "
    0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x72, 0x20, 0x44, 0x61, 0x64, 0x6f, 0x73, 0x0, // @1339 "Exportar Dados"
    0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x72, 0x20, 0x64, 0x61, 0x64, 0x6f, 0x73, 0x0, // @1354 "Exportar dados"
    0x4d, 0x61, 0x67, 0x6e, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20, 0x28, 0x64, 0x42, 0x29, 0x0, // @1369 "Magnitude (dB)"
    0x42, 0x6f, 0x64, 0x65, 0x20, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x0, // @1384 "Bode Analyzer"
    0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0xe7, 0xf5, 0x65, 0x73, 0x0, // @1398 "Configura??es"
    0x31, 0x20, 0x3a, 0x20, 0x32, 0x30, 0x30, 0x30, 0x30, 0x20, 0x48, 0x7a, 0x0, // @1412 "1 : 20000 Hz"
    0x31, 0x3a, 0x20, 0x32, 0x30, 0x30, 0x30, 0x30, 0x20, 0x48, 0x7a, 0x0, // @1425 "1: 20000 Hz"
    0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x61, 0x72, 0x20, 0x46, 0x53, 0x0, // @1437 "Formatar FS"
    0x2, 0xb0, 0x0, // @1449 "<>?"
    0x41, 0x74, 0x65, 0x6e, 0xe7, 0xe3, 0x6f, 0x21, 0x0, // @1452 "Aten??o!"
    0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x0, // @1461 "Calibrar"
    0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x61, 0x72, 0x0, // @1470 "Cancelar"
    0x31, 0x2e, 0x35, 0x20, 0x56, 0x70, 0x70, 0x0, // @1479 "1.5 Vpp"
    0x2, 0x0, // @1487 "<>"
    0x31, 0x30, 0x30, 0x30, 0x48, 0x7a, 0x0, // @1489 "1000Hz"
    0x33, 0x2e, 0x33, 0x56, 0x70, 0x70, 0x0, // @1496 "3.3Vpp"
    0x2d, 0x31, 0x32, 0x30, 0xb0, 0x0, // @1503 "-120?"
    0x2d, 0x31, 0x35, 0x30, 0xb0, 0x0, // @1509 "-150?"
    0x31, 0x30, 0x30, 0x48, 0x7a, 0x0, // @1515 "100Hz"
    0x53, 0x6f, 0x62, 0x72, 0x65, 0x0, // @1521 "Sobre"
    0x2d, 0x31, 0x38, 0x30, 0x0, // @1527 "-180"
    0x2d, 0x33, 0x30, 0xb0, 0x0, // @1532 "-30?"
    0x2d, 0x36, 0x30, 0xb0, 0x0, // @1537 "-60?"
    0x2d, 0x39, 0x30, 0xb0, 0x0, // @1542 "-90?"
    0x31, 0x30, 0x48, 0x7a, 0x0, // @1547 "10Hz"
    0x2, 0x20, 0x25, 0x0, // @1552 "<> %"
    0x46, 0x61, 0x73, 0x65, 0x0, // @1556 "Fase"
    0x31, 0x30, 0x30, 0x0, // @1561 "100"
    0x31, 0x48, 0x7a, 0x0, // @1565 "1Hz"
    0x32, 0x30, 0x30, 0x0, // @1569 "200"
    0x31, 0x30, 0x0, // @1573 "10"
    0x35, 0x30, 0x0, // @1576 "50"
    0x4f, 0x4b, 0x0, // @1579 "OK"
    0x31, 0x0 // @1582 "1"
};

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const uint32_t indicesGb[] TEXT_LOCATION_FLASH_ATTRIBUTE;

// Array holding dynamically installed languages
struct TranslationHeader
{
    uint32_t offset_to_texts;
    uint32_t offset_to_indices;
    uint32_t offset_to_typedtext;
};
static const TranslationHeader* languagesArray[1] = { 0 };

// Compiled and linked in languages
static const uint32_t* const staticLanguageIndices[] = {
    indicesGb
};

touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
    {
        if (languagesArray[id] != 0)
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
            currentLanguageIndices = staticLanguageIndices[id];
            currentLanguageTypedText = typedTextDatabaseArray[id];
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
    }
}

void touchgfx::Texts::setTranslation(touchgfx::LanguageId id, const void* translation)
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
}
