/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainmenu_screen/MainMenuViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainMenuViewBase::MainMenuViewBase() :
    buttonCallback(this, &MainMenuViewBase::buttonCallbackHandler),
    formatEnd1CloseContainerCallback(this, &MainMenuViewBase::formatEnd1CloseContainerCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    Background.setPosition(0, 0, 800, 480);
    Background.setColor(touchgfx::Color::getColorFromRGB(52, 70, 82));
    add(Background);

    btnAbout.setXY(72, 400);
    btnAbout.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON1_ID), touchgfx::Bitmap(BITMAP_BUTTON2_ID));
    btnAbout.setLabelText(touchgfx::TypedText(T___SINGLEUSE_CW3G));
    btnAbout.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnAbout.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnAbout.setAction(buttonCallback);
    add(btnAbout);

    btnFormatFS.setXY(72, 320);
    btnFormatFS.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON1_ID), touchgfx::Bitmap(BITMAP_BUTTON2_ID));
    btnFormatFS.setLabelText(touchgfx::TypedText(T___SINGLEUSE_S5N9));
    btnFormatFS.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnFormatFS.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnFormatFS.setAction(buttonCallback);
    add(btnFormatFS);

    btnShowGraphs.setXY(72, 240);
    btnShowGraphs.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON1_ID), touchgfx::Bitmap(BITMAP_BUTTON2_ID));
    btnShowGraphs.setLabelText(touchgfx::TypedText(T___SINGLEUSE_Q8SQ));
    btnShowGraphs.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnShowGraphs.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnShowGraphs.setAction(buttonCallback);
    add(btnShowGraphs);

    btnBodeAnalyzer.setXY(72, 160);
    btnBodeAnalyzer.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON1_ID), touchgfx::Bitmap(BITMAP_BUTTON2_ID));
    btnBodeAnalyzer.setLabelText(touchgfx::TypedText(T___SINGLEUSE_7Y3E));
    btnBodeAnalyzer.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnBodeAnalyzer.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnBodeAnalyzer.setAction(buttonCallback);
    add(btnBodeAnalyzer);

    boxTitleBack.setPosition(0, 23, 463, 74);
    boxTitleBack.setColor(touchgfx::Color::getColorFromRGB(216, 229, 247));
    add(boxTitleBack);

    lblTitle.setXY(87, 36);
    lblTitle.setColor(touchgfx::Color::getColorFromRGB(89, 88, 92));
    lblTitle.setLinespacing(0);
    lblTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6L2C));
    add(lblTitle);

    IFSP_LOGO.setXY(480, 121);
    IFSP_LOGO.setBitmap(touchgfx::Bitmap(BITMAP_IFSP_LOGO_ID));
    add(IFSP_LOGO);

    MIYOSHI_LOGO.setXY(620, 330);
    MIYOSHI_LOGO.setBitmap(touchgfx::Bitmap(BITMAP_MIYOSHI_LOGO_ID));
    add(MIYOSHI_LOGO);

    ST_LOGO.setXY(420, 330);
    ST_LOGO.setBitmap(touchgfx::Bitmap(BITMAP_ST_LOGO_ID));
    add(ST_LOGO);

    formatEnd1.setXY(147, 115);
    formatEnd1.setVisible(false);
    formatEnd1.setCloseContainerCallback(formatEnd1CloseContainerCallback);
    add(formatEnd1);
}

MainMenuViewBase::~MainMenuViewBase()
{

}

void MainMenuViewBase::setupScreen()
{
    formatEnd1.initialize();
}

void MainMenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btnBodeAnalyzer)
    {
        //BodeAnalyzer_Click
        //When btnBodeAnalyzer clicked call virtual function
        //Call BodeAnalyzer_Click
        BodeAnalyzer_Click();
    }
    if (&src == &btnAbout)
    {
        //About_Click
        //When btnAbout clicked call virtual function
        //Call About_Click
        About_Click();
    }
    if (&src == &btnShowGraphs)
    {
        //ShowGraphs_Click
        //When btnShowGraphs clicked call virtual function
        //Call ShowGraphs_Click
        ShowGraphs_Click();
    }
    if (&src == &btnFormatFS)
    {
        //FormatFS_Click
        //When btnFormatFS clicked call virtual function
        //Call FormatFS_Click
        FormatFS_Click();
    }
}

void MainMenuViewBase::formatEnd1CloseContainerCallbackHandler()
{
    //HideFSContainer
    //When formatEnd1 CloseContainer hide formatEnd1
    //Hide formatEnd1
    formatEnd1.setVisible(false);
    formatEnd1.invalidate();
}

void MainMenuViewBase::afterTransition()
{
    //TransitionEnds
    //When screen transition ends call virtual function
    //Call TransitionEnds
    TransitionEnds();
}

void MainMenuViewBase::GoToBodeAnalyzer()
{
    //GoToBodeAnalyzer_Action
    //When GoToBodeAnalyzer is called change screen to AcquisitionSettings
    //Go to AcquisitionSettings with no screen transition
    application().gotoAcquisitionSettingsScreenNoTransition();
}

void MainMenuViewBase::GoToAbout()
{
    //GoToAbout_Action
    //When GoToAbout is called change screen to About
    //Go to About with no screen transition
    application().gotoAboutScreenNoTransition();
}

void MainMenuViewBase::GoToGraphs()
{
    //GoToGraphs_Action
    //When GoToGraphs is called change screen to GraphicsScreen
    //Go to GraphicsScreen with no screen transition
    application().gotoGraphicsScreenScreenNoTransition();
}
