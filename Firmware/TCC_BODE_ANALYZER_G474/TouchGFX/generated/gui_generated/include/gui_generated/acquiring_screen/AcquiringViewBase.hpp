/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ACQUIRINGVIEWBASE_HPP
#define ACQUIRINGVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/acquiring_screen/AcquiringPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/containers/progress_indicators/ImageProgress.hpp>
#include <touchgfx/containers/progress_indicators/TextProgress.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <gui/containers/AcquisitionAborted.hpp>

class AcquiringViewBase : public touchgfx::View<AcquiringPresenter>
{
public:
    AcquiringViewBase();
    virtual ~AcquiringViewBase();
    virtual void setupScreen();
    virtual void afterTransition();
    virtual void handleTickEvent();

    /*
     * Custom Actions
     */
    virtual void GoToMainMenu();
    virtual void GoToGraphs();

    /*
     * Virtual Action Handlers
     */
    virtual void TransitionEnds()
    {
        // Override and implement this function in Acquiring
    }
    virtual void Abort_Click()
    {
        // Override and implement this function in Acquiring
    }
    virtual void Ok_Click()
    {
        // Override and implement this function in Acquiring
    }
    virtual void ScreenTick()
    {
        // Override and implement this function in Acquiring
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box Background;
    touchgfx::Box boxBackground;
    touchgfx::Box boxTitleBack;
    touchgfx::ButtonWithLabel btnAbort;
    touchgfx::ImageProgress imgProgress;
    touchgfx::TextProgress txtProgress;
    touchgfx::TextArea lblTitle;
    touchgfx::TextArea lblFilterON;
    touchgfx::TextArea lblFilterSettingTime;
    touchgfx::TextAreaWithOneWildcard lblTestingDevice;
    touchgfx::TextArea lblTestDone;
    AcquisitionAborted acquisitionAborted1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t LBLTESTINGDEVICE_SIZE = 2;
    touchgfx::Unicode::UnicodeChar lblTestingDeviceBuffer[LBLTESTINGDEVICE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<AcquiringViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<AcquiringViewBase> acquisitionAborted1CloseContainerCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void acquisitionAborted1CloseContainerCallbackHandler();

    /*
     * Tick Counter Declarations
     */
    static const uint32_t TICK_SCREENTICK_INTERVAL = 30;
    uint32_t frameCountScreenTickInterval;

};

#endif // ACQUIRINGVIEWBASE_HPP
