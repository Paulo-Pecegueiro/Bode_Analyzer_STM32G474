/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef GRAPHICSSCREENVIEWBASE_HPP
#define GRAPHICSSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/graphicsscreen_screen/GraphicsScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/graph/Graph.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class GraphicsScreenViewBase : public touchgfx::View<GraphicsScreenPresenter>
{
public:
    GraphicsScreenViewBase();
    virtual ~GraphicsScreenViewBase();
    virtual void setupScreen();
    virtual void afterTransition();

    /*
     * Custom Actions
     */
    virtual void BackToMain();

    /*
     * Virtual Action Handlers
     */
    virtual void TransitionEnds()
    {
        // Override and implement this function in GraphicsScreen
    }
    virtual void Back_Click()
    {
        // Override and implement this function in GraphicsScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box Background;
    touchgfx::Image imgGraph;
    touchgfx::Graph<100> PhaseGraph;
    touchgfx::GraphElementGridY PhaseGraphMajorYAxisGrid;
    touchgfx::GraphElementLine PhaseGraphLine1;
    touchgfx::PainterRGB565 PhaseGraphLine1Painter;
    touchgfx::Graph<100> MagnitudeGraph;
    touchgfx::GraphElementGridY MagnitudeGraphMajorYAxisGrid;
    touchgfx::GraphElementLine MagnitudeGraphLine1;
    touchgfx::PainterRGB565 MagnitudeGraphLine1Painter;
    touchgfx::ButtonWithLabel btnBack;
    touchgfx::TextArea lblMagnitude;
    touchgfx::TextArea lblPhase;
    touchgfx::TextArea lblMag0;
    touchgfx::TextAreaWithOneWildcard lblMag1;
    touchgfx::TextAreaWithOneWildcard lblMag2;
    touchgfx::TextAreaWithOneWildcard lblMag3;
    touchgfx::TextAreaWithOneWildcard lblMag4;
    touchgfx::TextAreaWithOneWildcard lblPhase1;
    touchgfx::TextAreaWithOneWildcard lblPhase2;
    touchgfx::TextAreaWithOneWildcard lblPhase3;
    touchgfx::TextAreaWithOneWildcard lblPhase4;
    touchgfx::TextAreaWithOneWildcard lblPhase5;
    touchgfx::TextArea lblFrequency1;
    touchgfx::TextArea lblFrequency2;
    touchgfx::TextArea lblFrequency3;
    touchgfx::TextArea lblFrequency4;

    /*
     * Wildcard Buffers
     */
    static const uint16_t LBLMAG1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblMag1Buffer[LBLMAG1_SIZE];
    static const uint16_t LBLMAG2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblMag2Buffer[LBLMAG2_SIZE];
    static const uint16_t LBLMAG3_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblMag3Buffer[LBLMAG3_SIZE];
    static const uint16_t LBLMAG4_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblMag4Buffer[LBLMAG4_SIZE];
    static const uint16_t LBLPHASE1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblPhase1Buffer[LBLPHASE1_SIZE];
    static const uint16_t LBLPHASE2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblPhase2Buffer[LBLPHASE2_SIZE];
    static const uint16_t LBLPHASE3_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblPhase3Buffer[LBLPHASE3_SIZE];
    static const uint16_t LBLPHASE4_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblPhase4Buffer[LBLPHASE4_SIZE];
    static const uint16_t LBLPHASE5_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblPhase5Buffer[LBLPHASE5_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<GraphicsScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // GRAPHICSSCREENVIEWBASE_HPP
